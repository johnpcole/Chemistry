      SUBROUTINE MAKE_ROT(BIG_J,ROT_J,ROT_K,E_LIMIT,ROTSTATE,STATEMAX,
     &                                         ORBSTATE,DEGSTATE)

C-    THIS SUBROUTINE CREATES THE ROTATIONAL DATA TABLE

      IMPLICIT NONE

      INTEGER BIG_J       ! TOTAL ANGULAR MOMENTUM QUANTUM NUMBER
      INTEGER DEGEN       ! ROTATIONAL DEGENERACY FACTOR
      REAL*8 E_LIMIT      ! AMOUNT OF AVAILABLE ENERGY
      INTEGER INDEX       ! ROTATIONAL STATES TABLE INDEX
      REAL*8 J_ENE        ! ROTATIONAL ENERGY
      INTEGER J_MAX       ! ROTATIONAL QUANTUM NUMBER LIMIT
      INTEGER J_VAL       ! ROTATIONAL QUANTUM NUMBER
      REAL*8 K_ENE        ! ROTATIONAL ENERGY
      INTEGER K_MAX       ! ROTATIONAL QUANTUM NUMBER LIMIT
      INTEGER K_VAL       ! ROTATIONAL QUANTUM NUMBER
      INTEGER L_MAX       ! ORBITAL QUANTUM NUMBER UPPER LIMIT
      INTEGER L_MIN       ! ORBITAL QUANTUM NUMBER LOWER LIMIT
      INTEGER L_VAL       ! ORBITAL QUANTUM NUMBER
      INTEGER M_VAL       ! DEGENERACY COUNTING QUANTUM NUMBER
      REAL*8 P_ENE        ! PRODUCT ENERGY (EXCLUDES L_ENE)
      REAL*8 ROT_J        ! ROTATIONAL CONSTANT
      REAL*8 ROT_K        ! ROTATIONAL CONSTANT
      REAL*8 ROTSTATE     ! ROTATIONAL STATES TABLE
      INTEGER ORBSTATE     ! ROTATIONAL STATES TABLE
      INTEGER DEGSTATE     ! ROTATIONAL STATES TABLE
      INTEGER STATEMAX    ! ROTATIONAL STATES TABLE SIZE

      DIMENSION ROTSTATE(0:STATEMAX)          ! ROTATIONAL STATES TABLE
      DIMENSION DEGSTATE(0:STATEMAX)          ! ROTATIONAL STATES TABLE
      DIMENSION ORBSTATE(0:STATEMAX)          ! ROTATIONAL STATES TABLE

C-    INITIALISE THE ROTATIONAL STATES TABLE

      DO INDEX=0,STATEMAX
         ROTSTATE(INDEX)=-1.0D0
         ORBSTATE(INDEX)=-1
         DEGSTATE(INDEX)=-1
         END DO

C-    BUILD UP THE ROTATIONAL STATES TABLE

      INDEX=0
      J_MAX=INT(DSQRT(0.25+(E_LIMIT/ROT_J))-0.5)

      DO J_VAL=0,J_MAX

         WRITE (*,'(A,F6.2,A)') ' CREATING ROTATIONAL STATES TABLE: ',
     &    (100.0*DFLOAT(J_VAL+1)/DFLOAT(J_MAX+1)),'% DONE OF OUTER LOOP'

         J_ENE=ROT_J*DFLOAT(J_VAL*(J_VAL+1))
         K_MAX=MIN(INT(DSQRT((E_LIMIT-J_ENE)/ROT_K)),J_VAL)
         L_MIN=ABS(BIG_J-J_VAL)
         L_MAX=BIG_J+J_VAL

         DO L_VAL=L_MIN,L_MAX

            DEGEN=(2*BIG_J)+1
            DO M_VAL=-BIG_J,BIG_J
               DEGEN=DEGEN+(2*MIN(J_VAL,L_VAL+M_VAL))
               END DO

            DO K_VAL=0,K_MAX

               K_ENE=DFLOAT(K_VAL*K_VAL)*ROT_K
               IF (K_VAL.EQ.1) DEGEN=DEGEN*2
               P_ENE=J_ENE+K_ENE             ! ROTATIONAL ENERGY AT PRODUCTS

               ROTSTATE(INDEX)=P_ENE            ! ROTATIONAL ENERGY
               DEGSTATE(INDEX)=DEGEN            ! DEGENERACY
               ORBSTATE(INDEX)=L_VAL            ! L VALUE

               INDEX=INDEX+1
               IF (INDEX.GT.STATEMAX) THEN
                  PAUSE 'ROT STATES ARRAY NOT LARGE ENOUGH'
                  STOP
                  END IF

               END DO !K

            END DO !L

         END DO !J

      RETURN
      END

