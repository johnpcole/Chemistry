      SUBROUTINE MAKE_t(t_CONST,E_LIMIT,tSTATE,STATEMAX,geomax)

C-    THIS SUBROUTINE CREATES THE transitional VIBRATIONAL DATA TABLE

      IMPLICIT NONE

      REAL*8 E1_LIM       ! ENERGY LIMIT ON TS VIBRATIONAL MODE 1
      REAL*8 E2_LIM       ! ENERGY LIMIT ON TS VIBRATIONAL MODE 2
      REAL*8 E_LIMIT      ! AMOUNT OF AVAILABLE ENERGY
      INTEGER INDEX       ! VIBRATIONAL STATES TABLE INDEX
      INTEGER P,T         ! DATA TABLE FLAGS
      INTEGER STATEMAX    ! VIBRATIONAL STATES TABLE SIZE
      REAL*8 T1_ENE       ! ENERGY OF TS VIBRATIONAL MODE 1
      REAL*8 T2_ENE       ! ENERGY OF TS VIBRATIONAL MODE 2
      INTEGER V1_MAX      ! QUANTUM NUMBER LIMIT ON VIBRATIONAL MODE 1
      INTEGER V2_MAX      ! QUANTUM NUMBER LIMIT ON VIBRATIONAL MODE 2
      INTEGER V1_VAL      ! QUANTUM NUMBER OF VIBRATIONAL MODE 1
      INTEGER V2_VAL      ! QUANTUM NUMBER OF VIBRATIONAL MODE 2
      INTEGER GEOMAX
      real*8 t_const
      real*8 tstate

      DIMENSION E_LIMIT(-1:GEOMAX)                ! AMOUNT OF AVAILABLE ENERGY
      DIMENSION t_CONST(1:2)                      ! VIBRATIONAL CONSTANTS DATA
      DIMENSION tSTATE(0:STATEMAX)                ! VIBRATIONAL STATES TABLE

      PARAMETER (P=-1,T=0)                    ! DATA TABLE FLAGS

C-    INITIALISE THE VIBRATIONAL STATES TABLE

         DO INDEX=0,STATEMAX
            tSTATE(INDEX)=-1.0D0
         END DO

C-    BUILD UP THE VIBRATIONAL STATES TABLE

      INDEX=0
      E1_LIM=E_LIMIT(T)
      V1_MAX=INT((E1_LIM/t_CONST(1))-0.5)
      DO V1_VAL=0,V1_MAX
         T1_ENE=t_CONST(1)*(DFLOAT(V1_VAL)+0.5)

         E2_LIM=E1_LIM-t1_ENE
         V2_MAX=INT((E2_LIM/t_CONST(2))-0.5)
         DO V2_VAL=0,V2_MAX
            T2_ENE=t_CONST(2)*(DFLOAT(V2_VAL)+0.5)

                           tSTATE(INDEX)=t1_ENE+t2_ene

                           INDEX=INDEX+1
                           IF (INDEX.GT.STATEMAX) THEN
                              PAUSE 'T STATES ARRAY NOT LARGE ENOUGH'
                              STOP
                              END IF

            END DO ! V2_VAL
         END DO ! V1_VAL

      RETURN
      END

